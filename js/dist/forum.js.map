{"version":3,"file":"forum.js","mappings":"MACA,IAAIA,EAAsB,CCA1BA,EAAyBC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,IAAOF,EAAiB,QACxB,IAAM,EAEP,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,ECLdF,EAAwB,CAACM,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDR,EAAwB,CAACc,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFf,EAAyBM,IACH,oBAAXa,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeL,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeL,EAAS,aAAc,CAAEe,OAAO,GAAO,G,+BCL9D,MAAM,EAA+BC,OAAOC,KAAKC,OAAO,a,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,iBCAlD,EAA+BF,OAAOC,KAAKC,OAAO,oC,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,kC,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,4B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,gB,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,4B,aCOxDC,IAAAA,UAAAA,UAAiCC,IAAAA,UAAgB,aACjDD,IAAAA,UAAAA,MAA6BC,IAAAA,UAAgB,SCR7C,MAAM,EAA+BJ,OAAOC,KAAKC,OAAO,2B,aCMxDC,IAAAA,UAAAA,UAAiCC,IAAAA,UAAgB,aCDjDC,IAAAA,aAAAA,IAAqB,iBAAiB,YCDpCC,EAAAA,EAAAA,QAAOC,IAAAA,UAA+B,iBAAiB,SAAUC,GACtC,UAArBC,KAAKD,OAAOE,OACVF,EAAOG,OAAOC,EAChBJ,EAAOG,OAAOC,GAAKJ,EAAOG,OAAOC,GAAK,IAAM,eAE5CJ,EAAOG,OAAOE,WAAY,EAG/B,KAEDP,EAAAA,EAAAA,QAAOC,IAAAA,UAA+B,WAAW,SAAUO,GACzDA,EAAIC,MAAQ,YACb,KJLDT,EAAAA,EAAAA,QAAOU,IAAoB,sBAAsB,SAAUC,EAAOC,GAChE,IAAIC,EAAUD,EAAWL,YAErBK,EAAWH,SACbE,EAAMG,IACJ,YACAC,IAAAA,UACE,CACEC,KAAM,cACNC,QAAS,WACPJ,GAAWA,EACXD,EAAWM,KAAK,CAAEX,UAAWM,GAC9B,GAEHd,IAAAA,WAAAA,MACEa,EAAWL,YAAc,kDAAoD,kDAKtF,KEtBDP,EAAAA,EAAAA,QAAOH,IAAAA,UAAsB,UAAU,SAAUsB,GAC3ChB,KAAKI,aACPY,EAAOL,IACL,YACAM,IAAAA,UAAgB,CACdC,KAAM,YACNC,MAAOvB,IAAAA,WAAAA,MAAqB,sCAC5BiB,KAAM,gBAER,GAGL,GCZF,G","sources":["webpack://@fof/frontpage/webpack/bootstrap","webpack://@fof/frontpage/webpack/runtime/compat get default export","webpack://@fof/frontpage/webpack/runtime/define property getters","webpack://@fof/frontpage/webpack/runtime/hasOwnProperty shorthand","webpack://@fof/frontpage/webpack/runtime/make namespace object","webpack://@fof/frontpage/external root \"flarum.core.compat['forum/app']\"","webpack://@fof/frontpage/external root \"flarum.core.compat['common/extend']\"","webpack://@fof/frontpage/external root \"flarum.core.compat['forum/states/DiscussionListState']\"","webpack://@fof/frontpage/external root \"flarum.core.compat['forum/utils/DiscussionControls']\"","webpack://@fof/frontpage/external root \"flarum.core.compat['common/components/Button']\"","webpack://@fof/frontpage/external root \"flarum.core.compat['common/Model']\"","webpack://@fof/frontpage/external root \"flarum.core.compat['common/models/Discussion']\"","webpack://@fof/frontpage/./src/forum/addFrontPage.js","webpack://@fof/frontpage/external root \"flarum.core.compat['common/components/Badge']\"","webpack://@fof/frontpage/./src/forum/addStickyBadge.js","webpack://@fof/frontpage/./src/forum/index.ts","webpack://@fof/frontpage/./src/forum/addFrontSort.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/states/DiscussionListState'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/utils/DiscussionControls'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Model'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/models/Discussion'];","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport DiscussionControls from 'flarum/forum/utils/DiscussionControls';\nimport Button from 'flarum/common/components/Button';\nimport Model from 'flarum/common/Model';\nimport Discussion from 'flarum/common/models/Discussion';\n\nDiscussion.prototype.frontpage = Model.attribute('frontpage');\nDiscussion.prototype.front = Model.attribute('front');\n\nexport default function addFrontPage() {\n  extend(DiscussionControls, 'moderationControls', function (items, discussion) {\n    let isFront = discussion.frontpage();\n\n    if (discussion.front()) {\n      items.add(\n        'frontpage',\n        Button.component(\n          {\n            icon: 'fas fa-home',\n            onclick: () => {\n              isFront = !isFront;\n              discussion.save({ frontpage: isFront });\n            },\n          },\n          app.translator.trans(\n            discussion.frontpage() ? 'core.forum.post_controls.pull_from_front_button' : 'core.forum.post_controls.push_to_front_button'\n          )\n        )\n      );\n    }\n  });\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Badge'];","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport Model from 'flarum/common/Model';\nimport Discussion from 'flarum/common/models/Discussion';\nimport Badge from 'flarum/common/components/Badge';\n\nDiscussion.prototype.frontpage = Model.attribute('frontpage');\n\nexport default function addStickyBadge() {\n  extend(Discussion.prototype, 'badges', function (badges) {\n    if (this.frontpage()) {\n      badges.add(\n        'frontpage',\n        Badge.component({\n          type: 'frontpage',\n          label: app.translator.trans('core.forum.badge.frontpage_tooltip'),\n          icon: 'fas fa-home',\n        }),\n        10\n      );\n    }\n  });\n}\n","import app from 'flarum/forum/app';\nimport addFrontSort from './addFrontSort';\nimport addFrontPage from './addFrontPage';\nimport addStickyBadge from './addStickyBadge';\n\napp.initializers.add('fof/frontpage', () => {\n  addFrontSort();\n  addFrontPage();\n  addStickyBadge();\n});\n","import { extend } from 'flarum/common/extend';\nimport DiscussionListState from 'flarum/forum/states/DiscussionListState';\n\nexport default function () {\n  extend(DiscussionListState.prototype, 'requestParams', function (params) {\n    if (this.params.sort === 'front') {\n      if (params.filter.q) {\n        params.filter.q = (params.filter.q || '') + 'is:frontpage';\n      } else {\n        params.filter.frontpage = true;\n      }\n    }\n  });\n\n  extend(DiscussionListState.prototype, 'sortMap', function (map) {\n    map.front = '-frontdate';\n  });\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","Discussion","Model","app","extend","DiscussionListState","params","this","sort","filter","q","frontpage","map","front","DiscussionControls","items","discussion","isFront","add","Button","icon","onclick","save","badges","Badge","type","label"],"sourceRoot":""}